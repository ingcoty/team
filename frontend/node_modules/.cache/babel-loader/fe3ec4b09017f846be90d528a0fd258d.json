{"ast":null,"code":"var _jsxFileName = \"/home/carloscabas/pruebas/prueba_front/team/frontend/src/components/ModalCompras.js\";\nimport React, { Component } from 'react';\nimport { Modal, Form, Header, Button } from \"semantic-ui-react\";\nimport Axios from 'axios';\nimport ErrorMsg from './ErrorMsg';\nimport CmbAutocomplete from './CmbAutocomplete';\n\nclass ModalCompras extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createCompra = event => {\n      //event.preventDefault()\n      var date = new Date();\n      const data = {\n        \"provider\": this.state.providercode.id,\n        \"date\": date.getDate() + '-' + date.getMonth() + '-' + date.getFullYear(),\n        \"value\": this.state.total,\n        \"productos\": this.state.selected\n      };\n      const tokens = JSON.parse(sessionStorage.getItem('loginState'));\n      Axios.post(this.props.url, {\n        data\n      }, {\n        headers: {\n          authorization: tokens.access_token\n        }\n      }).then(res => {\n        this.closeModal();\n        this.props.upDate();\n      }).catch(res => {\n        this.setState({\n          postHandler: true\n        });\n      });\n    };\n\n    this.getCantidad = event => {\n      this.setState({\n        cantidad: event.target.value\n      });\n    };\n\n    this.closeModal = () => {\n      this.props.onClose();\n    };\n\n    this.agregar = () => {\n      const selected = this.state.selected;\n      var product = Object.assign(this.state.productcode, {\n        'quantity': this.state.cantidad\n      });\n      var total = parseInt(this.state.total) + parseInt(product.quantity) * parseInt(product.price);\n      this.setState({\n        total: total\n      });\n      selected.push(product);\n      this.setState({\n        selected\n      });\n    };\n\n    this.getCodProvider = this.getCodProvider.bind(this);\n    this.getCodProduct = this.getCodProduct.bind(this);\n    this.state = {\n      postHandler: false,\n      providercode: [],\n      productcode: [],\n      productos: [],\n      selected: [],\n      total: 0,\n      cantidad: 1\n    };\n  }\n\n  getCodProvider(code) {\n    this.setState({\n      providercode: code\n    });\n  }\n\n  getCodProduct(code) {\n    this.setState({\n      productcode: code\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      as: Form,\n      open: true,\n      size: \"tiny\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"pencil\",\n      content: \"Agregar Compra\",\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CmbAutocomplete, {\n      source: \"http://localhost:5000/proveedoreslist\",\n      getcode: this.getCodProvider,\n      closeMsg: this.closeMsgError,\n      label: \"Proveedor\",\n      holder: \"Select Provider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CmbAutocomplete, {\n      source: \"http://localhost:5000/productoslist\",\n      getcode: this.getCodProduct,\n      closeMsg: this.closeMsgError,\n      label: \"Producto\",\n      holder: \"Select Product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"cantidad\",\n      required: true,\n      type: \"number\",\n      placeholder: \"cantidad\",\n      onChange: this.getCantidad,\n      value: this.state.cantidad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui small basic icon buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui button\",\n      onClick: this.agregar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"plus square icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 64\n      }\n    }))), /*#__PURE__*/React.createElement(\"table\", {\n      class: \"ui celled table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, \"Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, this.state.selected.map(productos => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }, productos.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, productos.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }\n      }, productos.quantity), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      }, productos.price), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }, \" \", productos.price * productos.quantity));\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 16\n      }\n    }, \"Total: \", this.state.total)), this.state.postHandler && /*#__PURE__*/React.createElement(ErrorMsg, {\n      title: \"Error al crear factura\",\n      description: \"Verifique todos los campos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      icon: \"times\",\n      content: \"Close\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      icon: \"save\",\n      content: \"Save\",\n      onClick: this.createCompra,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default ModalCompras;","map":{"version":3,"sources":["/home/carloscabas/pruebas/prueba_front/team/frontend/src/components/ModalCompras.js"],"names":["React","Component","Modal","Form","Header","Button","Axios","ErrorMsg","CmbAutocomplete","ModalCompras","constructor","props","createCompra","event","date","Date","data","state","providercode","id","getDate","getMonth","getFullYear","total","selected","tokens","JSON","parse","sessionStorage","getItem","post","url","headers","authorization","access_token","then","res","closeModal","upDate","catch","setState","postHandler","getCantidad","cantidad","target","value","onClose","agregar","product","Object","assign","productcode","parseInt","quantity","price","push","getCodProvider","bind","getCodProduct","productos","code","render","closeMsgError","map","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Form, Header, Button } from \"semantic-ui-react\";\nimport Axios from 'axios';\nimport ErrorMsg from './ErrorMsg'\nimport CmbAutocomplete from './CmbAutocomplete';\n\nclass ModalCompras extends Component {\n  constructor(props) {\n    super(props);\n    this.getCodProvider = this.getCodProvider.bind(this)\n    this.getCodProduct = this.getCodProduct.bind(this)\n    this.state = {\n      postHandler: false,\n      providercode: [],\n      productcode: [],\n      productos: [],\n      selected: [],\n      total: 0,\n      cantidad: 1\n    }\n  }\n\n  createCompra = event => {\n    //event.preventDefault()\n    var date = new Date()\n    const data = {\n      \"provider\": this.state.providercode.id,\n      \"date\": date.getDate() + '-' + date.getMonth() + '-' + date.getFullYear(),\n      \"value\": this.state.total,\n      \"productos\": this.state.selected\n    }\n    const tokens = JSON.parse(sessionStorage.getItem('loginState'))\n    Axios.post(this.props.url, { data }, {headers: { authorization: tokens.access_token }})\n      .then(res => {\n        this.closeModal()\n        this.props.upDate()\n      }).catch(res => {\n        this.setState({ postHandler: true })\n      }\n      )\n  }\n\n\n  getCantidad = event => {\n    this.setState({ cantidad: event.target.value })\n  }\n\n  getCodProvider(code) {\n    this.setState({ providercode: code })\n  }\n\n  getCodProduct(code) {\n    this.setState({ productcode: code })\n  }\n\n  closeModal = () => {\n    this.props.onClose()\n  }\n\n  agregar = () => {\n    const selected = this.state.selected\n    var product = Object.assign(this.state.productcode, { 'quantity': this.state.cantidad })\n    var total = parseInt(this.state.total) + parseInt(product.quantity) * parseInt(product.price);\n    this.setState({ total: total })\n    selected.push(product)\n    this.setState({ selected })\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal as={Form} open={true} size=\"tiny\">\n          <Header icon=\"pencil\" content=\"Agregar Compra\" as=\"h3\" />\n          <Modal.Content>\n\n            <CmbAutocomplete\n              source=\"http://localhost:5000/proveedoreslist\"\n              getcode={this.getCodProvider}\n              closeMsg={this.closeMsgError}\n              label={\"Proveedor\"}\n              holder={\"Select Provider\"}\n            />\n\n            <CmbAutocomplete\n              source=\"http://localhost:5000/productoslist\"\n              getcode={this.getCodProduct}\n              closeMsg={this.closeMsgError}\n              label={\"Producto\"}\n              holder={\"Select Product\"}\n            />\n            <Form.Input label=\"cantidad\" required type=\"number\" placeholder=\"cantidad\" onChange={this.getCantidad} value={this.state.cantidad} />\n            <div class=\"ui small basic icon buttons\">\n              <button class=\"ui button\" onClick={this.agregar}><i class=\"plus square icon\"></i></button>\n            </div>\n\n            <table class=\"ui celled table\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Description</th>\n                  <th>Quantity</th>\n                  <th>Price</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.selected.map(productos => {\n                  return (\n                    <tr>\n                      <td>{productos.id}</td>\n                      <td>{productos.description}</td>\n                      <td>{productos.quantity}</td>\n                      <td>{productos.price}</td>\n                      <td> {productos.price * productos.quantity}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n            <p><strong>Total: {this.state.total}</strong></p>\n            {this.state.postHandler && <ErrorMsg title=\"Error al crear factura\" description=\"Verifique todos los campos\" />}\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"red\" icon=\"times\" content=\"Close\" onClick={this.closeModal} />\n            <Button color=\"green\" icon=\"save\" content=\"Save\"  onClick={this.createCompra} />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalCompras"]},"metadata":{},"sourceType":"module"}