{"ast":null,"code":"var _jsxFileName = \"/home/carloscabas/Teams/team/frontend/src/components/ModalCliente.js\";\nimport React, { Component } from 'react';\nimport { Modal, Form, Header, Button } from \"semantic-ui-react\";\nimport Axios from 'axios';\nimport ErrorMsg from './ErrorMsg';\n\nclass ModalCliente extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createClient = event => {\n      event.preventDefault();\n      const data = {\n        id: this.state.id,\n        name: this.state.name,\n        address: this.state.address,\n        email: this.state.email,\n        phone: this.state.phone\n      };\n      const tokens = JSON.parse(sessionStorage.getItem('loginState'));\n\n      if (this.state.edit) {\n        Axios.put(this.props.url, {\n          data\n        }, {\n          headers: {\n            authorization: tokens.access_token\n          }\n        }).then(res => {\n          this.closeModal();\n          this.props.upDate();\n        }).catch(res => {\n          this.setState({\n            postHandler: true\n          });\n        });\n      } else {\n        Axios.post(this.props.url, {\n          data\n        }, {\n          headers: {\n            authorization: tokens.access_token\n          }\n        }).then(res => {\n          this.closeModal();\n          this.props.upDate();\n        }).catch(res => {\n          this.setState({\n            postHandler: true\n          });\n        });\n      }\n    };\n\n    this.getNumberId = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.getName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.getAddress = event => {\n      this.setState({\n        address: event.target.value\n      });\n    };\n\n    this.getEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.getPhone = event => {\n      this.setState({\n        phone: event.target.value\n      });\n    };\n\n    this.closeModal = () => {\n      this.props.onClose();\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      address: '',\n      email: '',\n      phone: '',\n      postHandler: false,\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    if (Object.keys(this.props.values).length) {\n      this.setState({\n        id: this.props.values.id\n      });\n      this.setState({\n        name: this.props.values.name\n      });\n      this.setState({\n        address: this.props.values.address\n      });\n      this.setState({\n        email: this.props.values.email\n      });\n      this.setState({\n        phone: this.props.values.phone\n      });\n      this.setState({\n        edit: true\n      });\n    } else {\n      this.setState({\n        edit: false\n      });\n      ;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      as: Form,\n      onSubmit: this.createClient,\n      open: true,\n      size: \"tiny\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"pencil\",\n      content: \"Agregar Resoluci\\xF3n\",\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"id\",\n      required: true,\n      type: \"number\",\n      placeholder: \"Numero de Identificacion\",\n      onChange: this.getNumberId,\n      value: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"name\",\n      required: true,\n      type: \"text\",\n      placeholder: \"Nombre\",\n      onChange: this.getName,\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"address\",\n      required: true,\n      type: \"text\",\n      placeholder: \"Direccion\",\n      onChange: this.getAddress,\n      value: this.state.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"email\",\n      required: true,\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: this.getEmail,\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"phone\",\n      required: true,\n      type: \"number\",\n      placeholder: \"Telenfono\",\n      onChange: this.getPhone,\n      value: this.state.phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), this.state.postHandler && /*#__PURE__*/React.createElement(ErrorMsg, {\n      title: \"Error al crear cliente\",\n      description: \"Verifique que el id no est\\xE9 creado\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      icon: \"times\",\n      content: \"Close\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"green\",\n      icon: \"save\",\n      content: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default ModalCliente;","map":{"version":3,"sources":["/home/carloscabas/Teams/team/frontend/src/components/ModalCliente.js"],"names":["React","Component","Modal","Form","Header","Button","Axios","ErrorMsg","ModalCliente","constructor","props","createClient","event","preventDefault","data","id","state","name","address","email","phone","tokens","JSON","parse","sessionStorage","getItem","edit","put","url","headers","authorization","access_token","then","res","closeModal","upDate","catch","setState","postHandler","post","getNumberId","target","value","getName","getAddress","getEmail","getPhone","onClose","componentDidMount","Object","keys","values","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Form, Header, Button } from \"semantic-ui-react\";\nimport Axios from 'axios';\nimport ErrorMsg from './ErrorMsg'\n\nclass ModalCliente extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name: '',\n      address: '',\n      email: '',\n      phone: '',\n      postHandler: false,\n      edit: false\n    }\n  }\n\n  componentDidMount() {\n    if (Object.keys(this.props.values).length) {\n      this.setState({ id: this.props.values.id });\n      this.setState({ name: this.props.values.name });\n      this.setState({ address: this.props.values.address });\n      this.setState({ email: this.props.values.email });\n      this.setState({ phone: this.props.values.phone });\n      this.setState({ edit: true });\n    }\n    else {\n      this.setState({ edit: false });;\n    }\n  }\n\n\n  createClient = event => {\n    event.preventDefault()\n    const data = {\n      id: this.state.id, name: this.state.name, address: this.state.address,\n      email: this.state.email, phone: this.state.phone\n    }\n    const tokens = JSON.parse(sessionStorage.getItem('loginState'))\n    if (this.state.edit) {\n      Axios.put(this.props.url, { data }, {\n        headers: { authorization: tokens.access_token }\n      })\n        .then(res => {\n          this.closeModal()\n          this.props.upDate()\n        }).catch(res => {\n          this.setState({ postHandler: true })\n        }\n        )\n    }\n    else {\n      Axios.post(this.props.url, { data }, {\n        headers: { authorization: tokens.access_token }\n      })\n        .then(res => {\n          this.closeModal()\n          this.props.upDate()\n        }).catch(res => {\n          this.setState({ postHandler: true })\n        }\n        )\n    }\n  }\n\n  getNumberId = event => {\n    this.setState({ id: event.target.value })\n  }\n\n  getName = event => {\n    this.setState({ name: event.target.value })\n  }\n\n  getAddress = event => {\n    this.setState({ address: event.target.value })\n  }\n\n  getEmail = event => {\n    this.setState({ email: event.target.value })\n  }\n\n  getPhone = event => {\n    this.setState({ phone: event.target.value })\n  }\n\n  closeModal = () => {\n    this.props.onClose()\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal as={Form} onSubmit={this.createClient} open={true} size=\"tiny\">\n          <Header icon=\"pencil\" content=\"Agregar Resolución\" as=\"h3\" />\n          <Modal.Content>\n            <Form.Input label=\"id\" required type=\"number\" placeholder=\"Numero de Identificacion\" onChange={this.getNumberId} value={this.state.id} />\n            <Form.Input label=\"name\" required type=\"text\" placeholder=\"Nombre\" onChange={this.getName} value={this.state.name} />\n            <Form.Input label=\"address\" required type=\"text\" placeholder=\"Direccion\" onChange={this.getAddress} value={this.state.address} />\n            <Form.Input label=\"email\" required type=\"text\" placeholder=\"Email\" onChange={this.getEmail} value={this.state.email} />\n            <Form.Input label=\"phone\" required type=\"number\" placeholder=\"Telenfono\" onChange={this.getPhone} value={this.state.phone} />\n            {this.state.postHandler && <ErrorMsg title=\"Error al crear cliente\" description=\"Verifique que el id no esté creado\" />}\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"red\" icon=\"times\" content=\"Close\" onClick={this.closeModal} />\n            <Button type=\"submit\" color=\"green\" icon=\"save\" content=\"Save\" />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalCliente"]},"metadata":{},"sourceType":"module"}