{"ast":null,"code":"var _jsxFileName = \"/home/carloscabas/pruebas/prueba_front/team/frontend/src/components/CmbAutocomplete.js\";\nimport React, { Component } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport Axios from 'axios';\n\nclass CmbAutocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValue = (obj, {\n      value\n    }) => {\n      this.setState({\n        value\n      });\n\n      for (var i in this.state.fulldata) {\n        if (this.state.fulldata[i].id == value) {\n          this.props.getcode(this.state.fulldata[i]);\n        }\n      }\n    };\n\n    this.state = {\n      value: this.props.initvalue,\n      options: [],\n      fulldata: []\n    };\n    this.source = this.props.source;\n  }\n\n  componentDidMount() {\n    const options = [];\n    const tokens = JSON.parse(sessionStorage.getItem('loginState'));\n    Axios.get(this.props.source, {\n      headers: {\n        authorization: tokens.access_token\n      }\n    }).then(res => {\n      const data = res.data;\n      this.setState({\n        fulldata: data\n      });\n      data.map(item => {\n        if (item.name) {\n          options.push({\n            value: item.id,\n            text: item.name\n          });\n        } else {\n          options.push({\n            value: item.id,\n            text: item.description\n          });\n        }\n      });\n      this.setState({\n        options\n      });\n    });\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"required field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, this.props.label)), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: this.props.holder,\n      fluid: true,\n      search: true,\n      selection: true,\n      options: this.state.options,\n      onChange: this.getValue,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CmbAutocomplete;","map":{"version":3,"sources":["/home/carloscabas/pruebas/prueba_front/team/frontend/src/components/CmbAutocomplete.js"],"names":["React","Component","Dropdown","Axios","CmbAutocomplete","constructor","props","getValue","obj","value","setState","i","state","fulldata","id","getcode","initvalue","options","source","componentDidMount","tokens","JSON","parse","sessionStorage","getItem","get","headers","authorization","access_token","then","res","data","map","item","name","push","text","description","render","label","holder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport Axios from 'axios'\n\n\nclass CmbAutocomplete extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.props.initvalue,\n            options: [],\n            fulldata: []\n        }\n        this.source = this.props.source\n    }\n\n    componentDidMount() {\n        const options = []\n        const tokens = JSON.parse(sessionStorage.getItem('loginState'))\n        Axios.get(this.props.source, {headers: { authorization: tokens.access_token }})\n            .then(res => {\n                const data = res.data;\n                this.setState({ fulldata: data })\n                data.map(item => {\n                    if (item.name) {\n                        options.push({\n                            value: item.id,\n                            text: item.name\n                        })\n                    }\n                    else {\n                        options.push({\n                            value: item.id,\n                            text: item.description\n                        })\n                    }\n                })\n                this.setState({ options })\n            }\n            )\n    }\n\n    getValue = (obj, { value }) => {\n        this.setState({ value })\n        for (var i in this.state.fulldata) {\n            if (this.state.fulldata[i].id == value) {\n                this.props.getcode(this.state.fulldata[i])\n            }\n        }\n    }\n\n    render() {\n        const { value } = this.state;\n        return (\n            <div>\n                <div className=\"required field\">\n                    <label>{this.props.label}</label>\n                </div>\n                <Dropdown\n                    placeholder={this.props.holder}\n                    fluid\n                    search\n                    selection\n                    options={this.state.options}\n                    onChange={this.getValue}\n                    value={value}\n                />\n            </div>\n        )\n    }\n}\n\nexport default CmbAutocomplete"]},"metadata":{},"sourceType":"module"}